<?xml version="1.0" encoding="UTF-8"?>



<!-- VARIABLE -->
<BlockGenus name="global-var-number" kind="global-variable"
	initlabel="global number" editable-label="yes" label-unique="yes"
	color="65 170 225">
	<description>
		<text>
			Reports the value of a number shared variable.
		</text>
	</description>
	<Type>int</Type>
	<BlockConnectors>
		<BlockConnector connector-kind="plug" connector-type="number-inv"></BlockConnector>
		<BlockConnector connector-kind="socket" connector-type="number">
			<DefaultArg genus-name="number" label="1"></DefaultArg>
		</BlockConnector>
	</BlockConnectors>
	<Stubs>
		<Stub stub-genus="getter">
			<LangSpecProperties>
				<LangSpecProperty key="vm-cmd-name" value="eval-global"></LangSpecProperty>
				<LangSpecProperty key="scope" value="global"></LangSpecProperty>
			</LangSpecProperties>
		</Stub>
		<Stub stub-genus="setter">
			<LangSpecProperties>
				<LangSpecProperty key="vm-cmd-name" value="eval-setglobal"></LangSpecProperty>
				<LangSpecProperty key="scope" value="global"></LangSpecProperty>
			</LangSpecProperties>
		</Stub>
		<Stub stub-genus="inc">
			<LangSpecProperties>
				<LangSpecProperty key="vm-cmd-name" value="eval-incglobal"></LangSpecProperty>
				<LangSpecProperty key="scope" value="global"></LangSpecProperty>
			</LangSpecProperties>
		</Stub>
	</Stubs>
	<LangSpecProperties>
		<LangSpecProperty key="scope" value="global"></LangSpecProperty>
		<LangSpecProperty key="type" value="number"></LangSpecProperty>
		<LangSpecProperty key="is-owned-by-breed" value="yes"></LangSpecProperty>
		<LangSpecProperty key="is-monitorable" value="yes"></LangSpecProperty>
	</LangSpecProperties>
</BlockGenus>

<BlockGenus name="global-var-string" kind="global-variable"
	initlabel="global text" editable-label="yes" label-unique="yes" color="230 0 255 ">
	<description>
		<text>
			Reports the value of a text shared variable.
		</text>
	</description>
	<BlockConnectors>
		<BlockConnector connector-kind="socket" connector-type="string"></BlockConnector>
	</BlockConnectors>
	<Type>String</Type>
	<Stubs>
		<Stub stub-genus="getter">
			<LangSpecProperties>
				<LangSpecProperty key="vm-cmd-name" value="eval-global"></LangSpecProperty>
				<LangSpecProperty key="scope" value="global"></LangSpecProperty>
			</LangSpecProperties>
		</Stub>
		<Stub stub-genus="setter">
			<LangSpecProperties>
				<LangSpecProperty key="vm-cmd-name" value="eval-setglobal"></LangSpecProperty>
				<LangSpecProperty key="scope" value="global"></LangSpecProperty>
			</LangSpecProperties>
		</Stub>
	</Stubs>
	<LangSpecProperties>
		<LangSpecProperty key="scope" value="global"></LangSpecProperty>
		<LangSpecProperty key="type" value="string"></LangSpecProperty>
		<LangSpecProperty key="is-owned-by-breed" value="yes"></LangSpecProperty>
		<LangSpecProperty key="is-monitorable" value="yes"></LangSpecProperty>
	</LangSpecProperties>
</BlockGenus>

<BlockGenus name="global-var-boolean" kind="global-variable"
	initlabel="global boolean" editable-label="yes" label-unique="yes"
	color="230 0 255 ">
	<description>
		<text>
			Reports the value of a boolean (
			<em>true</em>
			or
			<em>false</em>
			) shared variable.
		</text>
	</description>
	<BlockConnectors>
		<BlockConnector connector-kind="socket" connector-type="boolean"></BlockConnector>
	</BlockConnectors>
	<Type>boolean</Type>
	<Stubs>
		<Stub stub-genus="getter">
			<LangSpecProperties>
				<LangSpecProperty key="vm-cmd-name" value="eval-global"></LangSpecProperty>
				<LangSpecProperty key="scope" value="global"></LangSpecProperty>
			</LangSpecProperties>
		</Stub>
		<Stub stub-genus="setter">
			<LangSpecProperties>
				<LangSpecProperty key="vm-cmd-name" value="eval-setglobal"></LangSpecProperty>
				<LangSpecProperty key="scope" value="global"></LangSpecProperty>
			</LangSpecProperties>
		</Stub>
	</Stubs>
	<LangSpecProperties>
		<LangSpecProperty key="scope" value="global"></LangSpecProperty>
		<LangSpecProperty key="type" value="boolean"></LangSpecProperty>
		<LangSpecProperty key="is-owned-by-breed" value="yes"></LangSpecProperty>
		<LangSpecProperty key="is-monitorable" value="yes"></LangSpecProperty>
	</LangSpecProperties>
</BlockGenus>

<BlockGenus name="global-var-object" kind="global-variable"
	initlabel="o" header-label="Object型の変数を作り、" footer-label="と名付ける"
	editable-label="yes" label-unique="yes" color="230 0 255 ">
	<description>
		<text>
			オブジェクト型のグローバル変数を宣言します。変数名を設定してください。
		</text>
	</description>
	<Type>Object</Type>
	<BlockConnectors>
		<BlockConnector connector-kind="socket" connector-type="object">
			<DefaultArg genus-name="true" label="true"></DefaultArg>
		</BlockConnector>
	</BlockConnectors>
	<Stubs>
		<Stub stub-genus="callActionMethod">
			<LangSpecProperties>
				<LangSpecProperty key="vm-cmd-name" value="eval-local"></LangSpecProperty>
				<LangSpecProperty key="scope" value="local"></LangSpecProperty>
			</LangSpecProperties>
		</Stub>
		<Stub stub-genus="callGetterMethod">
			<LangSpecProperties>
				<LangSpecProperty key="vm-cmd-name" value="eval-local"></LangSpecProperty>
				<LangSpecProperty key="scope" value="local"></LangSpecProperty>
			</LangSpecProperties>
		</Stub>
	</Stubs>
	<LangSpecProperties>
		<LangSpecProperty key="scope" value="global"></LangSpecProperty>
		<LangSpecProperty key="type" value="boolean"></LangSpecProperty>
		<LangSpecProperty key="is-owned-by-breed" value="yes"></LangSpecProperty>
		<LangSpecProperty key="is-monitorable" value="yes"></LangSpecProperty>
	</LangSpecProperties>
</BlockGenus>

<BlockGenus name="local-var-int-number" kind="local-variable"
	initlabel="i" header-label="int型の変数を作り、" footer-label="と名付ける"
	editable-label="yes" label-unique="yes" color="230 0 255">
	<description>
		<text>
			数値型のローカル変数を宣言します。変数名を設定してください。
		</text>
	</description>
	<Type>int</Type>
	<BlockConnectors>
		<BlockConnector label="初期値" connector-kind="socket" connector-type="number">
			<DefaultArg genus-name="number" label="1"></DefaultArg>
		</BlockConnector>
	</BlockConnectors>
	<Stubs>
		<Stub stub-genus="getter">
			<LangSpecProperties>
				<LangSpecProperty key="vm-cmd-name" value="eval-local"></LangSpecProperty>
				<LangSpecProperty key="scope" value="local"></LangSpecProperty>
			</LangSpecProperties>
		</Stub>
		<Stub stub-genus="setter">
			<LangSpecProperties>
				<LangSpecProperty key="vm-cmd-name" value="eval-setlocal"></LangSpecProperty>
				<LangSpecProperty key="scope" value="local"></LangSpecProperty>
			</LangSpecProperties>
		</Stub>
		<Stub stub-genus="inc">
			<LangSpecProperties>
				<LangSpecProperty key="vm-cmd-name" value="eval-inclocal"></LangSpecProperty>
				<LangSpecProperty key="scope" value="local"></LangSpecProperty>
			</LangSpecProperties>
		</Stub>
		<Stub stub-genus="preinc">
			<LangSpecProperties>
				<LangSpecProperty key="vm-cmd-name" value="eval-inclocal"></LangSpecProperty>
				<LangSpecProperty key="scope" value="local"></LangSpecProperty>
			</LangSpecProperties>
		</Stub>
		<Stub stub-genus="predec">
			<LangSpecProperties>
				<LangSpecProperty key="vm-cmd-name" value="eval-inclocal"></LangSpecProperty>
				<LangSpecProperty key="scope" value="local"></LangSpecProperty>
			</LangSpecProperties>
		</Stub>
		<Stub stub-genus="postinc">
			<LangSpecProperties>
				<LangSpecProperty key="vm-cmd-name" value="eval-inclocal"></LangSpecProperty>
				<LangSpecProperty key="scope" value="local"></LangSpecProperty>
			</LangSpecProperties>
		</Stub>
		<Stub stub-genus="postdec">
			<LangSpecProperties>
				<LangSpecProperty key="vm-cmd-name" value="eval-inclocal"></LangSpecProperty>
				<LangSpecProperty key="scope" value="local"></LangSpecProperty>
			</LangSpecProperties>
		</Stub>
	</Stubs>
	<LangSpecProperties>
		<LangSpecProperty key="scope" value="local"></LangSpecProperty>
		<LangSpecProperty key="type" value="number"></LangSpecProperty>
		<LangSpecProperty key="is-owned-by-breed" value="yes"></LangSpecProperty>
		<LangSpecProperty key="is-monitorable" value="yes"></LangSpecProperty>
	</LangSpecProperties>
</BlockGenus>

<BlockGenus name="local-var-double-number" kind="local-variable"
	initlabel="d" header-label="double型の変数を作り、" footer-label="と名付ける"
	editable-label="yes" label-unique="yes" color="230 0 255">
	<description>
		<text>
			数値型のローカル変数を宣言します。変数名を設定してください。
		</text>
	</description>
	<Type>double</Type>
	<BlockConnectors>
		<BlockConnector label="初期値" connector-kind="socket"
			connector-type="double-number">
			<DefaultArg genus-name="double-number" label="1.0"></DefaultArg>
		</BlockConnector>
	</BlockConnectors>
	<Stubs>
		<Stub stub-genus="getter">
			<LangSpecProperties>
				<LangSpecProperty key="vm-cmd-name" value="eval-local"></LangSpecProperty>
				<LangSpecProperty key="scope" value="local"></LangSpecProperty>
			</LangSpecProperties>
		</Stub>
		<Stub stub-genus="setter">
			<LangSpecProperties>
				<LangSpecProperty key="vm-cmd-name" value="eval-setlocal"></LangSpecProperty>
				<LangSpecProperty key="scope" value="local"></LangSpecProperty>
			</LangSpecProperties>
		</Stub>
		<Stub stub-genus="inc">
			<LangSpecProperties>
				<LangSpecProperty key="vm-cmd-name" value="eval-inclocal"></LangSpecProperty>
				<LangSpecProperty key="scope" value="local"></LangSpecProperty>
			</LangSpecProperties>
		</Stub>
		<Stub stub-genus="preinc">
			<LangSpecProperties>
				<LangSpecProperty key="vm-cmd-name" value="eval-inclocal"></LangSpecProperty>
				<LangSpecProperty key="scope" value="local"></LangSpecProperty>
			</LangSpecProperties>
		</Stub>
		<Stub stub-genus="predec">
			<LangSpecProperties>
				<LangSpecProperty key="vm-cmd-name" value="eval-inclocal"></LangSpecProperty>
				<LangSpecProperty key="scope" value="local"></LangSpecProperty>
			</LangSpecProperties>
		</Stub>
		<Stub stub-genus="postinc">
			<LangSpecProperties>
				<LangSpecProperty key="vm-cmd-name" value="eval-inclocal"></LangSpecProperty>
				<LangSpecProperty key="scope" value="local"></LangSpecProperty>
			</LangSpecProperties>
		</Stub>
		<Stub stub-genus="postdec">
			<LangSpecProperties>
				<LangSpecProperty key="vm-cmd-name" value="eval-inclocal"></LangSpecProperty>
				<LangSpecProperty key="scope" value="local"></LangSpecProperty>
			</LangSpecProperties>
		</Stub>
	</Stubs>
	<LangSpecProperties>
		<LangSpecProperty key="scope" value="local"></LangSpecProperty>
		<LangSpecProperty key="type" value="number"></LangSpecProperty>
		<LangSpecProperty key="is-owned-by-breed" value="yes"></LangSpecProperty>
		<LangSpecProperty key="is-monitorable" value="yes"></LangSpecProperty>
	</LangSpecProperties>
</BlockGenus>

<BlockGenus name="local-var-string" kind="local-variable"
	initlabel="s" header-label="String型の変数を作り、" footer-label="と名付ける"
	editable-label="yes" label-unique="yes" color="230 0 255">
	<description>
		<text>
			テキスト型のローカル変数を宣言します。変数名を設定してください。
		</text>
	</description>
	<Type>String</Type>
	<BlockConnectors>
		<BlockConnector label="初期値" connector-kind="socket"
			connector-type="string">
			<DefaultArg genus-name="string" label="あいうえお"></DefaultArg>
		</BlockConnector>
	</BlockConnectors>
	<Stubs>
		<Stub stub-genus="getter">
			<LangSpecProperties>
				<LangSpecProperty key="vm-cmd-name" value="eval-local"></LangSpecProperty>
				<LangSpecProperty key="scope" value="local"></LangSpecProperty>
			</LangSpecProperties>
		</Stub>
		<Stub stub-genus="setter">
			<LangSpecProperties>
				<LangSpecProperty key="vm-cmd-name" value="eval-setlocal"></LangSpecProperty>
				<LangSpecProperty key="scope" value="local"></LangSpecProperty>
			</LangSpecProperties>
		</Stub>
	</Stubs>
	<LangSpecProperties>
		<LangSpecProperty key="scope" value="local"></LangSpecProperty>
		<LangSpecProperty key="type" value="string"></LangSpecProperty>
		<LangSpecProperty key="is-owned-by-breed" value="yes"></LangSpecProperty>
		<LangSpecProperty key="is-monitorable" value="yes"></LangSpecProperty>
	</LangSpecProperties>
</BlockGenus>

<BlockGenus name="local-var-boolean" kind="local-variable"
	initlabel="b" header-label="boolean型の変数を作り、" footer-label="と名付ける"
	editable-label="yes" label-unique="yes" color="230 0 255 ">
	<description>
		<text>
			真偽値型のローカル変数を宣言します。変数名を設定してください。
		</text>
	</description>
	<Type>boolean</Type>
	<BlockConnectors>
		<BlockConnector label="初期値" connector-kind="socket"
			connector-type="boolean">
			<DefaultArg genus-name="false" label="偽"></DefaultArg>
		</BlockConnector>
	</BlockConnectors>
	<Stubs>
		<Stub stub-genus="getter">
			<LangSpecProperties>
				<LangSpecProperty key="vm-cmd-name" value="eval-local"></LangSpecProperty>
				<LangSpecProperty key="scope" value="local"></LangSpecProperty>
			</LangSpecProperties>
		</Stub>
		<Stub stub-genus="setter">
			<LangSpecProperties>
				<LangSpecProperty key="vm-cmd-name" value="eval-setlocal"></LangSpecProperty>
				<LangSpecProperty key="scope" value="local"></LangSpecProperty>
			</LangSpecProperties>
		</Stub>
	</Stubs>
	<LangSpecProperties>
		<LangSpecProperty key="scope" value="local"></LangSpecProperty>
		<LangSpecProperty key="type" value="boolean"></LangSpecProperty>
		<LangSpecProperty key="is-owned-by-breed" value="yes"></LangSpecProperty>
		<LangSpecProperty key="is-monitorable" value="yes"></LangSpecProperty>
	</LangSpecProperties>
</BlockGenus>


<BlockGenus name="private-var-int-number" kind="global-variable"
	initlabel="i" header-label="int型のインスタンス変数を作り、" footer-label="と名付ける"
	editable-label="yes" label-unique="yes" color="230 0 255">
	<description>
		<text>
			数値型のプライベート変数を宣言します。変数名を設定してください。
		</text>
	</description>
	<Type>int</Type>
	<BlockConnectors>
		<BlockConnector label="初期値" connector-kind="socket"
			connector-type="number">
			<DefaultArg genus-name="number" label="1"></DefaultArg>
		</BlockConnector>
	</BlockConnectors>
	<Stubs>
		<Stub stub-genus="getter">
			<LangSpecProperties>
				<LangSpecProperty key="vm-cmd-name" value="eval-global"></LangSpecProperty>
				<LangSpecProperty key="scope" value="global"></LangSpecProperty>
			</LangSpecProperties>
		</Stub>
		<Stub stub-genus="setter">
			<LangSpecProperties>
				<LangSpecProperty key="vm-cmd-name" value="eval-setglobal"></LangSpecProperty>
				<LangSpecProperty key="scope" value="global"></LangSpecProperty>
			</LangSpecProperties>
		</Stub>
        <Stub stub-genus="getterthis">
			<LangSpecProperties>
				<LangSpecProperty key="vm-cmd-name" value="eval-global"></LangSpecProperty>
				<LangSpecProperty key="scope" value="global"></LangSpecProperty>
			</LangSpecProperties>
		</Stub>
        <Stub stub-genus="inc">
			<LangSpecProperties>
				<LangSpecProperty key="vm-cmd-name" value="eval-incglobal"></LangSpecProperty>
				<LangSpecProperty key="scope" value="global"></LangSpecProperty>
			</LangSpecProperties>
		</Stub>
	</Stubs>
	<LangSpecProperties>
		<LangSpecProperty key="scope" value="global"></LangSpecProperty>
		<LangSpecProperty key="type" value="number"></LangSpecProperty>
		<LangSpecProperty key="is-owned-by-breed" value="yes"></LangSpecProperty>
		<LangSpecProperty key="is-monitorable" value="yes"></LangSpecProperty>
	</LangSpecProperties>
</BlockGenus>


<BlockGenus name="private-var-string" kind="global-variable"
	initlabel="s" header-label="String型のインスタンス変数を作り、" footer-label="と名付ける"
	editable-label="yes" label-unique="yes" color="230 0 255">
	<description>
		<text>
			テキスト型のプライベート変数を宣言します。変数名を設定してください。
		</text>
	</description>
	<Type>String</Type>
	<BlockConnectors>
		<BlockConnector label="初期値" connector-kind="socket"
			connector-type="string">
			<DefaultArg genus-name="string" label="あいうえお"></DefaultArg>
		</BlockConnector>
	</BlockConnectors>
	<Stubs>
		<Stub stub-genus="getter">
			<LangSpecProperties>
				<LangSpecProperty key="vm-cmd-name" value="eval-global"></LangSpecProperty>
				<LangSpecProperty key="scope" value="global"></LangSpecProperty>
			</LangSpecProperties>
		</Stub>
		<Stub stub-genus="setter">
			<LangSpecProperties>
				<LangSpecProperty key="vm-cmd-name" value="eval-setglobal"></LangSpecProperty>
				<LangSpecProperty key="scope" value="global"></LangSpecProperty>
			</LangSpecProperties>
		</Stub>
	</Stubs>
	<LangSpecProperties>
		<LangSpecProperty key="scope" value="global"></LangSpecProperty>
		<LangSpecProperty key="type" value="string"></LangSpecProperty>
		<LangSpecProperty key="is-owned-by-breed" value="yes"></LangSpecProperty>
		<LangSpecProperty key="is-monitorable" value="yes"></LangSpecProperty>
	</LangSpecProperties>
</BlockGenus>


<BlockGenus name="private-var-boolean" kind="global-variable"
	initlabel="b" header-label="boolean型のインスタンス変数を作り、" footer-label="と名付ける"
	editable-label="yes" label-unique="yes" color="230 0 255 ">
	<description>
		<text>
			真偽値型のプライベート変数を宣言します。変数名を設定してください。
		</text>
	</description>
	<Type>boolean</Type>
	<BlockConnectors>
		<BlockConnector label="初期値" connector-kind="socket"
			connector-type="boolean">
			<DefaultArg genus-name="false" label="偽"></DefaultArg>
		</BlockConnector>
	</BlockConnectors>
	<Stubs>
		<Stub stub-genus="getter">
			<LangSpecProperties>
				<LangSpecProperty key="vm-cmd-name" value="eval-global"></LangSpecProperty>
				<LangSpecProperty key="scope" value="global"></LangSpecProperty>
			</LangSpecProperties>
		</Stub>
		<Stub stub-genus="setter">
			<BlockConnectors>
				<BlockConnector label="初期値" connector-kind="socket"
					connector-type="boolean">
					<DefaultArg genus-name="false" label="偽"></DefaultArg>
				</BlockConnector>
			</BlockConnectors>
			<LangSpecProperties>
				<LangSpecProperty key="vm-cmd-name" value="eval-setglobal"></LangSpecProperty>
				<LangSpecProperty key="scope" value="global"></LangSpecProperty>
			</LangSpecProperties>
		</Stub>
	</Stubs>
	<LangSpecProperties>
		<LangSpecProperty key="scope" value="global"></LangSpecProperty>
		<LangSpecProperty key="type" value="boolean"></LangSpecProperty>
		<LangSpecProperty key="is-owned-by-breed" value="yes"></LangSpecProperty>
		<LangSpecProperty key="is-monitorable" value="yes"></LangSpecProperty>
	</LangSpecProperties>
</BlockGenus>

<BlockGenus name="private-var-double-number" kind="global-variable"
	initlabel="d" header-label="double型のインスタンス変数を作り、" footer-label="と名付ける"
	editable-label="yes" label-unique="yes" color="230 0 255">
	<description>
		<text>
			数値型のプライベート変数を宣言します。変数名を設定してください。
		</text>
	</description>
	<Type>double</Type>
	<BlockConnectors>
		<BlockConnector label="初期値" connector-kind="socket"
			connector-type="double-number">
			<DefaultArg genus-name="double-number" label="1.0"></DefaultArg>
		</BlockConnector>
	</BlockConnectors>
	<Stubs>
		<Stub stub-genus="getter">
			<LangSpecProperties>
				<LangSpecProperty key="vm-cmd-name" value="eval-incglobal"></LangSpecProperty>
				<LangSpecProperty key="scope" value="local"></LangSpecProperty>
			</LangSpecProperties>
		</Stub>
		<Stub stub-genus="setter">
			<LangSpecProperties>
				<LangSpecProperty key="vm-cmd-name" value="eval-inclocal"></LangSpecProperty>
				<LangSpecProperty key="scope" value="global"></LangSpecProperty>
			</LangSpecProperties>
		</Stub>
		<Stub stub-genus="inc">
			<LangSpecProperties>
				<LangSpecProperty key="vm-cmd-name" value="eval-incglobal"></LangSpecProperty>
				<LangSpecProperty key="scope" value="global"></LangSpecProperty>
			</LangSpecProperties>
		</Stub>
	</Stubs>
	<LangSpecProperties>
		<LangSpecProperty key="scope" value="global"></LangSpecProperty>
		<LangSpecProperty key="type" value="number"></LangSpecProperty>
		<LangSpecProperty key="is-owned-by-breed" value="yes"></LangSpecProperty>
		<LangSpecProperty key="is-monitorable" value="yes"></LangSpecProperty>
	</LangSpecProperties>
</BlockGenus>


<BlockGenus name="private-final-var-int-number" kind="global-variable"
	initlabel="i" header-label="int型の定数を作り、" footer-label="と名付ける"
	editable-label="yes" label-unique="yes" color="230 0 255">
	<description>
		<text>
			整数型の定数を宣言します。変数名を設定してください。
		</text>
	</description>
	<Type>int</Type>
	<BlockConnectors>
		<BlockConnector label="値" connector-kind="socket"
			connector-type="number">
			<DefaultArg genus-name="number" label="1"></DefaultArg>
		</BlockConnector>
	</BlockConnectors>
	<Stubs>
		<Stub stub-genus="getter">
			<LangSpecProperties>
				<LangSpecProperty key="vm-cmd-name" value="eval-global"></LangSpecProperty>
				<LangSpecProperty key="scope" value="global"></LangSpecProperty>
			</LangSpecProperties>
		</Stub>
	</Stubs>
	<LangSpecProperties>
		<LangSpecProperty key="scope" value="global"></LangSpecProperty>
		<LangSpecProperty key="type" value="number"></LangSpecProperty>
		<LangSpecProperty key="is-owned-by-breed" value="yes"></LangSpecProperty>
		<LangSpecProperty key="is-monitorable" value="yes"></LangSpecProperty>
	</LangSpecProperties>
</BlockGenus>


<BlockGenus name="private-final-var-string" kind="global-variable"
	initlabel="s" header-label="String型の定数を作り、" footer-label="と名付ける"
	editable-label="yes" label-unique="yes" color="230 0 255">
	<description>
		<text>
			テキスト型の定数を宣言します。変数名を設定してください。
		</text>
	</description>
	<Type>String</Type>
	<BlockConnectors>
		<BlockConnector label="値" connector-kind="socket"
			connector-type="string">
			<DefaultArg genus-name="string" label="あいうえお"></DefaultArg>
		</BlockConnector>
	</BlockConnectors>
	<Stubs>
		<Stub stub-genus="getter">
			<LangSpecProperties>
				<LangSpecProperty key="vm-cmd-name" value="eval-global"></LangSpecProperty>
				<LangSpecProperty key="scope" value="global"></LangSpecProperty>
			</LangSpecProperties>
		</Stub>
	</Stubs>
	<LangSpecProperties>
		<LangSpecProperty key="scope" value="global"></LangSpecProperty>
		<LangSpecProperty key="type" value="string"></LangSpecProperty>
		<LangSpecProperty key="is-owned-by-breed" value="yes"></LangSpecProperty>
		<LangSpecProperty key="is-monitorable" value="yes"></LangSpecProperty>
	</LangSpecProperties>
</BlockGenus>


<BlockGenus name="private-final-var-boolean" kind="global-variable"
	initlabel="b" header-label="boolean型の定数を作り、" footer-label="と名付ける"
	editable-label="yes" label-unique="yes" color="230 0 255 ">
	<description>
		<text>
			真偽値型のプライベート変数を宣言します。変数名を設定してください。
		</text>
	</description>
	<Type>boolean</Type>
	<BlockConnectors>
		<BlockConnector label="値" connector-kind="socket"
			connector-type="boolean">
			<DefaultArg genus-name="false" label="偽"></DefaultArg>
		</BlockConnector>
	</BlockConnectors>
	<Stubs>
		<Stub stub-genus="getter">
			<LangSpecProperties>
				<LangSpecProperty key="vm-cmd-name" value="eval-global"></LangSpecProperty>
				<LangSpecProperty key="scope" value="global"></LangSpecProperty>
			</LangSpecProperties>
		</Stub>
	</Stubs>
	<LangSpecProperties>
		<LangSpecProperty key="scope" value="global"></LangSpecProperty>
		<LangSpecProperty key="type" value="boolean"></LangSpecProperty>
		<LangSpecProperty key="is-owned-by-breed" value="yes"></LangSpecProperty>
		<LangSpecProperty key="is-monitorable" value="yes"></LangSpecProperty>
	</LangSpecProperties>
</BlockGenus>

<BlockGenus name="local-var-string-arrayobject" kind="local-variable"
	initlabel="s" header-label="String[]型の配列を作り、" footer-label="と名付ける"
	editable-label="yes" label-unique="yes" color="230 0 255 ">
	<description>
		<text>
			オブジェクト型のローカル変数を宣言します。変数名を設定してください。
		</text>
	</description>
	<Type>String[]</Type>
	<BlockConnectors>
		<BlockConnector label="初期値" connector-kind="socket"
			connector-type="object">
			<DefaultArg genus-name="new-arrayobject-stringarray"
				label="String[]"></DefaultArg>
		</BlockConnector>
	</BlockConnectors>
	<Stubs>
		<Stub stub-genus="getter">
			<LangSpecProperties>
				<LangSpecProperty key="vm-cmd-name" value="eval-local"></LangSpecProperty>
				<LangSpecProperty key="scope" value="local"></LangSpecProperty>
			</LangSpecProperties>
		</Stub>
		<Stub stub-genus="setter">
			<LangSpecProperties>
				<LangSpecProperty key="vm-cmd-name" value="eval-setlocal"></LangSpecProperty>
				<LangSpecProperty key="scope" value="local"></LangSpecProperty>
			</LangSpecProperties>
		</Stub>
		<Stub stub-genus="getter-arrayelement">
			<LangSpecProperties>
				<LangSpecProperty key="vm-cmd-name" value="eval-setlocal"></LangSpecProperty>
				<LangSpecProperty key="scope" value="local"></LangSpecProperty>
			</LangSpecProperties>
		</Stub>
		<Stub stub-genus="setter-arrayelement">
			<LangSpecProperties>
				<LangSpecProperty key="vm-cmd-name" value="eval-setlocal"></LangSpecProperty>
				<LangSpecProperty key="scope" value="local"></LangSpecProperty>
			</LangSpecProperties>
		</Stub>
	</Stubs>
	<LangSpecProperties>
		<LangSpecProperty key="scope" value="local"></LangSpecProperty>
		<LangSpecProperty key="type" value="object"></LangSpecProperty>
		<LangSpecProperty key="is-owned-by-breed" value="yes"></LangSpecProperty>
		<LangSpecProperty key="is-monitorable" value="yes"></LangSpecProperty>
	</LangSpecProperties>
</BlockGenus>

<BlockGenus name="private-var-string-arrayobject" kind="global-variable"
	initlabel="s" header-label="String[]型のインスタンス変数を作り、" footer-label="と名付ける"
	editable-label="yes" label-unique="yes" color="230 0 255 ">
	<description>
		<text>
			オブジェクト型のローカル変数を宣言します。変数名を設定してください。
		</text>
	</description>
	<Type>String[]</Type>
	<BlockConnectors>
		<BlockConnector label="初期値" connector-kind="socket"
			connector-type="object">
			<DefaultArg genus-name="new-arrayobject-stringarray"
				label="String[]"></DefaultArg>
		</BlockConnector>
	</BlockConnectors>
	<Stubs>
		<Stub stub-genus="getter">
			<LangSpecProperties>
				<LangSpecProperty key="vm-cmd-name" value="eval-global"></LangSpecProperty>
				<LangSpecProperty key="scope" value="global"></LangSpecProperty>
			</LangSpecProperties>
		</Stub>
		<Stub stub-genus="setter">
			<LangSpecProperties>
				<LangSpecProperty key="vm-cmd-name" value="eval-setglobal"></LangSpecProperty>
				<LangSpecProperty key="scope" value="global"></LangSpecProperty>
			</LangSpecProperties>
		</Stub>
		<Stub stub-genus="getter-arrayelement">
			<LangSpecProperties>
				<LangSpecProperty key="vm-cmd-name" value="eval-setlocal"></LangSpecProperty>
				<LangSpecProperty key="scope" value="local"></LangSpecProperty>
			</LangSpecProperties>
		</Stub>
		<Stub stub-genus="setter-arrayelement">
			<LangSpecProperties>
				<LangSpecProperty key="vm-cmd-name" value="eval-setlocal"></LangSpecProperty>
				<LangSpecProperty key="scope" value="local"></LangSpecProperty>
			</LangSpecProperties>
		</Stub>
	</Stubs>
	<LangSpecProperties>
		<LangSpecProperty key="scope" value="global"></LangSpecProperty>
		<LangSpecProperty key="type" value="object"></LangSpecProperty>
		<LangSpecProperty key="is-owned-by-breed" value="yes"></LangSpecProperty>
		<LangSpecProperty key="is-monitorable" value="yes"></LangSpecProperty>
	</LangSpecProperties>
</BlockGenus>

<BlockGenus name="private-var-int-number-arrayobject" kind="global-variable"
	initlabel="i" header-label="int[]型のインスタンス変数を作り、" footer-label="と名付ける"
	editable-label="yes" label-unique="yes" color="230 0 255 ">
	<description>
		<text>
			オブジェクト型のローカル変数を宣言します。変数名を設定してください。
		</text>
	</description>
	<Type>int[]</Type>
	<BlockConnectors>
		<BlockConnector label="初期値" connector-kind="socket"
			connector-type="object">
			<DefaultArg genus-name="new-arrayobject-stringarray"
				label="int[]"></DefaultArg>
		</BlockConnector>
	</BlockConnectors>
	<Stubs>
		<Stub stub-genus="getter">
			<LangSpecProperties>
				<LangSpecProperty key="vm-cmd-name" value="eval-global"></LangSpecProperty>
				<LangSpecProperty key="scope" value="global"></LangSpecProperty>
			</LangSpecProperties>
		</Stub>
		<Stub stub-genus="setter">
			<LangSpecProperties>
				<LangSpecProperty key="vm-cmd-name" value="eval-setglobal"></LangSpecProperty>
				<LangSpecProperty key="scope" value="global"></LangSpecProperty>
			</LangSpecProperties>
		</Stub>
        <Stub stub-genus="getter-arrayelement">
			<LangSpecProperties>
				<LangSpecProperty key="vm-cmd-name" value="eval-setlocal"></LangSpecProperty>
				<LangSpecProperty key="scope" value="local"></LangSpecProperty>
			</LangSpecProperties>
		</Stub>
		<Stub stub-genus="setter-arrayelement">
			<LangSpecProperties>
				<LangSpecProperty key="vm-cmd-name" value="eval-setlocal"></LangSpecProperty>
				<LangSpecProperty key="scope" value="local"></LangSpecProperty>
			</LangSpecProperties>
		</Stub>
	</Stubs>
	<LangSpecProperties>
		<LangSpecProperty key="scope" value="global"></LangSpecProperty>
		<LangSpecProperty key="type" value="object"></LangSpecProperty>
		<LangSpecProperty key="is-owned-by-breed" value="yes"></LangSpecProperty>
		<LangSpecProperty key="is-monitorable" value="yes"></LangSpecProperty>
	</LangSpecProperties>
</BlockGenus>


<BlockGenus name="local-var-double-number-arrayobject" kind="local-variable"
	initlabel="i" header-label="double[]型の配列を作り、" footer-label="と名付ける"
	editable-label="yes" label-unique="yes" color="230 0 255 ">
	<description>
		<text>
			オブジェクト型のローカル変数を宣言します。変数名を設定してください。
		</text>
	</description>
	<Type>double[]</Type>
	<BlockConnectors>
		<BlockConnector label="初期値" connector-kind="socket"
			connector-type="object">
			<DefaultArg genus-name="new-arrayobject-doublearray"
				label="double[]"></DefaultArg>
		</BlockConnector>
	</BlockConnectors>
	<Stubs>
		<Stub stub-genus="getter">
			<LangSpecProperties>
				<LangSpecProperty key="vm-cmd-name" value="eval-local"></LangSpecProperty>
				<LangSpecProperty key="scope" value="local"></LangSpecProperty>
			</LangSpecProperties>
		</Stub>
		<Stub stub-genus="setter">
			<LangSpecProperties>
				<LangSpecProperty key="vm-cmd-name" value="eval-setlocal"></LangSpecProperty>
				<LangSpecProperty key="scope" value="local"></LangSpecProperty>
			</LangSpecProperties>
		</Stub>
        <Stub stub-genus="getter-arrayelement">
			<LangSpecProperties>
				<LangSpecProperty key="vm-cmd-name" value="eval-setlocal"></LangSpecProperty>
				<LangSpecProperty key="scope" value="local"></LangSpecProperty>
			</LangSpecProperties>
		</Stub>
		<Stub stub-genus="setter-arrayelement">
			<LangSpecProperties>
				<LangSpecProperty key="vm-cmd-name" value="eval-setlocal"></LangSpecProperty>
				<LangSpecProperty key="scope" value="local"></LangSpecProperty>
			</LangSpecProperties>
		</Stub>
	</Stubs>
	<LangSpecProperties>
		<LangSpecProperty key="scope" value="local"></LangSpecProperty>
		<LangSpecProperty key="type" value="object"></LangSpecProperty>
		<LangSpecProperty key="is-owned-by-breed" value="yes"></LangSpecProperty>
		<LangSpecProperty key="is-monitorable" value="yes"></LangSpecProperty>
	</LangSpecProperties>
</BlockGenus>

<BlockGenus name="local-var-object-arrayobject" kind="local-variable"
	initlabel="objects" header-label="Object[]型の配列を作り、" footer-label="と名付ける"
	editable-label="yes" label-unique="yes" color="230 0 255 ">
	<description>
		<text>
			オブジェクト型のローカル変数を宣言します。変数名を設定してください。
		</text>
	</description>
	<Type>Object[]</Type>
	<BlockConnectors>
		<BlockConnector label="初期値" connector-kind="socket"
			connector-type="object">
			<DefaultArg genus-name="new-arrayobject-objectarray"
				label="Object[]"></DefaultArg>
		</BlockConnector>
	</BlockConnectors>
	<Stubs>
		<Stub stub-genus="getter">
			<LangSpecProperties>
				<LangSpecProperty key="vm-cmd-name" value="eval-local"></LangSpecProperty>
				<LangSpecProperty key="scope" value="local"></LangSpecProperty>
			</LangSpecProperties>
		</Stub>
		<Stub stub-genus="setter">
			<LangSpecProperties>
				<LangSpecProperty key="vm-cmd-name" value="eval-setlocal"></LangSpecProperty>
				<LangSpecProperty key="scope" value="local"></LangSpecProperty>
			</LangSpecProperties>
		</Stub>
        <Stub stub-genus="getter-arrayelement">
			<LangSpecProperties>
				<LangSpecProperty key="vm-cmd-name" value="eval-setlocal"></LangSpecProperty>
				<LangSpecProperty key="scope" value="local"></LangSpecProperty>
			</LangSpecProperties>
		</Stub>
		<Stub stub-genus="setter-arrayelement">
			<LangSpecProperties>
				<LangSpecProperty key="vm-cmd-name" value="eval-setlocal"></LangSpecProperty>
				<LangSpecProperty key="scope" value="local"></LangSpecProperty>
			</LangSpecProperties>
		</Stub>
	</Stubs>
	<LangSpecProperties>
		<LangSpecProperty key="scope" value="local"></LangSpecProperty>
		<LangSpecProperty key="type" value="object"></LangSpecProperty>
		<LangSpecProperty key="is-owned-by-breed" value="yes"></LangSpecProperty>
		<LangSpecProperty key="is-monitorable" value="yes"></LangSpecProperty>
	</LangSpecProperties>
</BlockGenus>

<BlockGenus name="private-var-object-arrayobject" kind="global-variable"
	initlabel="objects" header-label="Object[]型のインスタンス変数を作り、" footer-label="と名付ける"
	editable-label="yes" label-unique="yes" color="230 0 255 ">
	<description>
		<text>
			オブジェクト型のローカル変数を宣言します。変数名を設定してください。
		</text>
	</description>
	<Type>Object[]</Type>
	<BlockConnectors>
		<BlockConnector label="初期値" connector-kind="socket"
			connector-type="object">
			<DefaultArg genus-name="new-arrayobject-objectarray"
				label="Object[]"></DefaultArg>
		</BlockConnector>
	</BlockConnectors>
	<Stubs>
		<Stub stub-genus="getter">
			<LangSpecProperties>
				<LangSpecProperty key="vm-cmd-name" value="eval-global"></LangSpecProperty>
				<LangSpecProperty key="scope" value="global"></LangSpecProperty>
			</LangSpecProperties>
		</Stub>
		<Stub stub-genus="setter">
			<LangSpecProperties>
				<LangSpecProperty key="vm-cmd-name" value="eval-global"></LangSpecProperty>
				<LangSpecProperty key="scope" value="global"></LangSpecProperty>
			</LangSpecProperties>
		</Stub>
        <Stub stub-genus="getter-arrayelement">
			<LangSpecProperties>
				<LangSpecProperty key="vm-cmd-name" value="eval-setlocal"></LangSpecProperty>
				<LangSpecProperty key="scope" value="global"></LangSpecProperty>
			</LangSpecProperties>
		</Stub>
		<Stub stub-genus="setter-arrayelement">
			<LangSpecProperties>
				<LangSpecProperty key="vm-cmd-name" value="eval-setlocal"></LangSpecProperty>
				<LangSpecProperty key="scope" value="local"></LangSpecProperty>
			</LangSpecProperties>
		</Stub>
	</Stubs>
	<LangSpecProperties>
		<LangSpecProperty key="scope" value="global"></LangSpecProperty>
		<LangSpecProperty key="type" value="object"></LangSpecProperty>
		<LangSpecProperty key="is-owned-by-breed" value="yes"></LangSpecProperty>
		<LangSpecProperty key="is-monitorable" value="yes"></LangSpecProperty>
	</LangSpecProperties>
</BlockGenus>


<BlockGenus name="private-final-var-double-number" kind="global-variable"
	initlabel="d" header-label="double型の定数を作り、" footer-label="と名付ける"
	editable-label="yes" label-unique="yes" color="230 0 255">
	<description>
		<text>
			実数型の定数を宣言します。変数名を設定してください。
		</text>
	</description>
	<Type>double</Type>
	<BlockConnectors>
		<BlockConnector label="値" connector-kind="socket"
			connector-type="double-number">
			<DefaultArg genus-name="double-number" label="1.0"></DefaultArg>
		</BlockConnector>
	</BlockConnectors>
	<Stubs>
		<Stub stub-genus="getter">
			<LangSpecProperties>
				<LangSpecProperty key="vm-cmd-name" value="eval-incglobal"></LangSpecProperty>
				<LangSpecProperty key="scope" value="local"></LangSpecProperty>
			</LangSpecProperties>
		</Stub>
    </Stubs>
	<LangSpecProperties>
		<LangSpecProperty key="scope" value="global"></LangSpecProperty>
		<LangSpecProperty key="type" value="number"></LangSpecProperty>
		<LangSpecProperty key="is-owned-by-breed" value="yes"></LangSpecProperty>
		<LangSpecProperty key="is-monitorable" value="yes"></LangSpecProperty>
	</LangSpecProperties>
</BlockGenus>


<BlockGenus name="private-final-var-object" kind="global-variable"
	initlabel="t" header-label="Object型の定数を作り、" footer-label="と名付ける"
	editable-label="yes" label-unique="yes" color="230 0 255">
	<description>
		<text>
			オブジェクト型の定数を宣言します。変数名を設定してください。
		</text>
	</description>
	<Type>Object</Type>
	<BlockConnectors>
		<BlockConnector label="値" connector-kind="socket"
			connector-type="object">
            <DefaultArg genus-name="new-object" label="1.0"></DefaultArg>
		</BlockConnector>
	</BlockConnectors>
	<Stubs>
		<Stub stub-genus="getter">
			<LangSpecProperties>
				<LangSpecProperty key="vm-cmd-name" value="eval-incglobal"></LangSpecProperty>
				<LangSpecProperty key="scope" value="local"></LangSpecProperty>
			</LangSpecProperties>
		</Stub>
    </Stubs>
	<LangSpecProperties>
		<LangSpecProperty key="scope" value="global"></LangSpecProperty>
		<LangSpecProperty key="type" value="number"></LangSpecProperty>
		<LangSpecProperty key="is-owned-by-breed" value="yes"></LangSpecProperty>
		<LangSpecProperty key="is-monitorable" value="yes"></LangSpecProperty>
	</LangSpecProperties>
</BlockGenus>

<BlockGenus name="local-var-listobject" kind="local-variable"
	initlabel="o" header-label=" リストを作り、" footer-label="と名付ける"
	editable-label="yes" label-unique="yes" color="230 0 255 ">
	<description>
		<text>
			オブジェクト型のグローバル変数を宣言します。変数名を設定してください。
		</text>
	</description>
	<Type>List</Type>
	<BlockConnectors>
		<BlockConnector connector-kind="socket" connector-type="object">
			<DefaultArg genus-name="true" label="true"></DefaultArg>
		</BlockConnector>
	</BlockConnectors>
	<Stubs>
		<Stub stub-genus="callActionMethod">
			<LangSpecProperties>
				<LangSpecProperty key="vm-cmd-name" value="eval-local"></LangSpecProperty>
				<LangSpecProperty key="scope" value="local"></LangSpecProperty>
			</LangSpecProperties>
		</Stub>
		<Stub stub-genus="callGetterMethod">
			<LangSpecProperties>
				<LangSpecProperty key="vm-cmd-name" value="eval-local"></LangSpecProperty>
				<LangSpecProperty key="scope" value="local"></LangSpecProperty>
			</LangSpecProperties>
		</Stub>
	</Stubs>
	<LangSpecProperties>
		<LangSpecProperty key="scope" value="global"></LangSpecProperty>
		<LangSpecProperty key="type" value="boolean"></LangSpecProperty>
		<LangSpecProperty key="is-owned-by-breed" value="yes"></LangSpecProperty>
		<LangSpecProperty key="is-monitorable" value="yes"></LangSpecProperty>
	</LangSpecProperties>
</BlockGenus>