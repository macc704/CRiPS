<?xml version="1.0" encoding="UTF-8"?>
<BlockDrawerSet name="factory" type="stack" location="southwest" window-per-drawer="no" drawer-draggable="no">

	<BlockDrawer name="タートル" type="factory" button-color="247 0 0">
		<BlockGenusMember>local-var-object-Turtle</BlockGenusMember>
		<BlockGenusMember>createTurtle[]</BlockGenusMember>
		<BlockGenusMember>fd[@int]</BlockGenusMember>
		<BlockGenusMember>bk[@int]</BlockGenusMember>
		<BlockGenusMember>rt[@int]</BlockGenusMember>
		<BlockGenusMember>lt[@int]</BlockGenusMember>
		<BlockGenusMember>up[]</BlockGenusMember>
		<BlockGenusMember>down[]</BlockGenusMember>
		<BlockGenusMember>color[@object]</BlockGenusMember>
		<BlockGenusMember>input[]</BlockGenusMember>
		<BlockGenusMember>print[@string]</BlockGenusMember>
		<BlockGenusMember>random[@int]</BlockGenusMember>
	</BlockDrawer>

	<BlockDrawer name="構造化・オブジェクト" type="factory" button-color="255 255 255">
		<BlockGenusMember>abstraction</BlockGenusMember>
		<BlockGenusMember>procedure</BlockGenusMember>
		<BlockGenusMember>proc-param-number</BlockGenusMember>
		<BlockGenusMember>proc-param-double-number</BlockGenusMember>
		<BlockGenusMember>proc-param-boolean</BlockGenusMember>
		<BlockGenusMember>proc-param-string</BlockGenusMember>
		<BlockGenusMember>return</BlockGenusMember>
		<BlockGenusMember>constructor</BlockGenusMember>
		<BlockGenusMember>callActionMethod2</BlockGenusMember>
		<BlockGenusMember>callGetterMethod2</BlockGenusMember>
	</BlockDrawer>
	<!-- <BlockDrawer name="オブジェクト" type="factory" button-color="20 20 20"> <BlockGenusMember>callActionMethod2</BlockGenusMember> <BlockGenusMember>callGetterMethod2</BlockGenusMember> </BlockDrawer> -->
	<BlockDrawer name="分岐、繰返" type="factory" button-color="255 80 0">
		<BlockGenusMember>ifelse</BlockGenusMember>
		<BlockGenusMember>while</BlockGenusMember>
		<BlockGenusMember>dowhile</BlockGenusMember>
		<BlockGenusMember>break</BlockGenusMember>
		<BlockGenusMember>continue</BlockGenusMember>
	</BlockDrawer>

	<BlockDrawer name="調べる" type="factory" button-color="204 204 102">
		<BlockGenusMember>equals-number</BlockGenusMember>
		<BlockGenusMember>not-equals-number</BlockGenusMember>
		<BlockGenusMember>lessthan</BlockGenusMember>
		<BlockGenusMember>greaterthan</BlockGenusMember>
		<BlockGenusMember>lessthanorequalto</BlockGenusMember>
		<BlockGenusMember>greaterthanorequalto</BlockGenusMember>
		<BlockGenusMember>equals-number-double</BlockGenusMember>
		<BlockGenusMember>not-equals-number-double</BlockGenusMember>
		<BlockGenusMember>lessthan-double</BlockGenusMember>
		<BlockGenusMember>greaterthan-double</BlockGenusMember>
		<BlockGenusMember>lessthanorequalto-double</BlockGenusMember>
		<BlockGenusMember>greaterthanorequalto-double</BlockGenusMember>
		<BlockGenusMember>equals-boolean</BlockGenusMember>
		<BlockGenusMember>not-equals-boolean</BlockGenusMember>
		<BlockGenusMember>equals-string</BlockGenusMember>
		<BlockGenusMember>and</BlockGenusMember>
		<BlockGenusMember>or</BlockGenusMember>
		<BlockGenusMember>not</BlockGenusMember>
		<BlockGenusMember>true</BlockGenusMember>
		<BlockGenusMember>false</BlockGenusMember>
	</BlockDrawer>


	<BlockDrawer name="計算" type="factory" button-color="102 129 255">
		<BlockGenusMember>sum</BlockGenusMember>
		<BlockGenusMember>difference</BlockGenusMember>
		<BlockGenusMember>product</BlockGenusMember>
		<BlockGenusMember>quotient</BlockGenusMember>
		<BlockGenusMember>remainder</BlockGenusMember>

		<BlockGenusMember>sum-double</BlockGenusMember>
		<BlockGenusMember>difference-double</BlockGenusMember>
		<BlockGenusMember>product-double</BlockGenusMember>
		<BlockGenusMember>quotient-double</BlockGenusMember>
		<BlockGenusMember>remainder-double</BlockGenusMember>

		<BlockGenusMember>string-append</BlockGenusMember>

		<BlockGenusMember>Math-random[]</BlockGenusMember>
		<BlockGenusMember>Math-sqrt[@int]</BlockGenusMember>
		<BlockGenusMember>Math-sin[@int]</BlockGenusMember>
		<BlockGenusMember>Math-cos[@int]</BlockGenusMember>
		<BlockGenusMember>Math-tan[@int]</BlockGenusMember>
		<BlockGenusMember>Math-log[@int]</BlockGenusMember>
		<BlockGenusMember>Math-toRadians[@int]</BlockGenusMember>
	</BlockDrawer>

	<BlockDrawer name="変数の定義" type="factory" button-color="230 0 255">
		<BlockGenusMember>local-var-int-number</BlockGenusMember>
		<BlockGenusMember>local-var-double-number</BlockGenusMember>
		<BlockGenusMember>local-var-string</BlockGenusMember>
		<BlockGenusMember>local-var-boolean</BlockGenusMember>
		<BlockGenusMember>local-var-object</BlockGenusMember>
	</BlockDrawer>

	<BlockDrawer name="変換" type="factory" button-color="204 0 255">
		<BlockGenusMember>toIntFromDouble</BlockGenusMember>
		<BlockGenusMember>toIntFromString</BlockGenusMember>
		<BlockGenusMember>toDoubleFromInt</BlockGenusMember>
		<BlockGenusMember>toDoubleFromString</BlockGenusMember>
		<BlockGenusMember>toStringFromInt</BlockGenusMember>
		<BlockGenusMember>toStringFromDouble</BlockGenusMember>
		<BlockGenusMember>toStringFromObject</BlockGenusMember>
	</BlockDrawer>

	<BlockDrawer name="値" type="factory" button-color="255 61 200">
		<BlockGenusMember>number</BlockGenusMember>
		<BlockGenusMember>double-number</BlockGenusMember>
		<BlockGenusMember>string</BlockGenusMember>
		<BlockGenusMember>true</BlockGenusMember>
		<BlockGenusMember>false</BlockGenusMember>
	</BlockDrawer>

	<BlockDrawer name="色" type="factory" button-color="255 155 64">
		<BlockGenusMember>blue</BlockGenusMember>
		<BlockGenusMember>cyan</BlockGenusMember>
		<BlockGenusMember>green</BlockGenusMember>
		<BlockGenusMember>magenta</BlockGenusMember>
		<BlockGenusMember>orange</BlockGenusMember>
		<BlockGenusMember>pink</BlockGenusMember>
		<BlockGenusMember>red</BlockGenusMember>
		<BlockGenusMember>white</BlockGenusMember>
		<BlockGenusMember>yellow</BlockGenusMember>
		<BlockGenusMember>gray</BlockGenusMember>
		<BlockGenusMember>lightGray</BlockGenusMember>
		<BlockGenusMember>darkGray</BlockGenusMember>
		<BlockGenusMember>black</BlockGenusMember>
		<!-- <BlockGenusMember>new-object-Color[@int@int@int]</BlockGenusMember> -->
	</BlockDrawer>

	<BlockDrawer name="タートル(座標と大きさ)" type="factory" button-color="153 0 0">
		<BlockGenusMember>getX[]</BlockGenusMember>
		<BlockGenusMember>getY[]</BlockGenusMember>
		<BlockGenusMember>warp[@int@int]</BlockGenusMember>
		<BlockGenusMember>getWidth[]</BlockGenusMember>
		<BlockGenusMember>getHeight[]</BlockGenusMember>
		<BlockGenusMember>scale[@int]</BlockGenusMember>
		<BlockGenusMember>size[@int@int]</BlockGenusMember>
		<BlockGenusMember>large[@int]</BlockGenusMember>
		<BlockGenusMember>small[@int]</BlockGenusMember>
		<BlockGenusMember>wide[@int]</BlockGenusMember>
		<BlockGenusMember>narrow[@int]</BlockGenusMember>
		<BlockGenusMember>tall[@int]</BlockGenusMember>
		<BlockGenusMember>little[@int]</BlockGenusMember>
	</BlockDrawer>

	<BlockDrawer name="タートル（見た目と判定）" type="factory" button-color="153 0 0">
		<BlockGenusMember>show[]</BlockGenusMember>
		<BlockGenusMember>hide[]</BlockGenusMember>
		<BlockGenusMember>isShow[]</BlockGenusMember>
		<BlockGenusMember>looks[@object]</BlockGenusMember>
		<BlockGenusMember>contains[@int@int]</BlockGenusMember>
		<BlockGenusMember>intersects[@object]</BlockGenusMember>
	</BlockDrawer>

	<BlockDrawer button-color="153 0 0" name="タートル（キーとマウス）">
		<BlockGenusMember>key[]</BlockGenusMember>
		<BlockGenusMember>keyDown[@int]</BlockGenusMember>
		<BlockGenusMember>mouseX[]</BlockGenusMember>
		<BlockGenusMember>mouseY[]</BlockGenusMember>
		<BlockGenusMember>mouseClicked[]</BlockGenusMember>
		<BlockGenusMember>leftMouseClicked[]</BlockGenusMember>
		<BlockGenusMember>rightMouseClicked[]</BlockGenusMember>
		<BlockGenusMember>doubleClick[]</BlockGenusMember>
		<BlockGenusMember>mouseDown[]</BlockGenusMember>
		<BlockGenusMember>leftMouseDown[]</BlockGenusMember>
		<BlockGenusMember>rightMouseDown[]</BlockGenusMember>
	</BlockDrawer>

	<BlockDrawer name="タートル(その他)" type="factory" button-color="153 0 0">
		<BlockGenusMember>update[]</BlockGenusMember>
		<BlockGenusMember>sleep[@int]</BlockGenusMember>
		<BlockGenusMember>input[]</BlockGenusMember>
		<BlockGenusMember>print[@string]</BlockGenusMember>
		<BlockGenusMember>saveToFile[@string]</BlockGenusMember>
		<BlockGenusMember>loadFromFile[@string]</BlockGenusMember>
		<BlockGenusMember>loadFromFile[@string@string]</BlockGenusMember>
	</BlockDrawer>

	<BlockDrawer name="ImageTurtle" type="factory" button-color="230 0 255">
		<BlockGenusMember>local-var-object-Image</BlockGenusMember>
		<BlockGenusMember>image[@string]</BlockGenusMember>
	</BlockDrawer>

	<BlockDrawer name="TextTurtle" type="factory" button-color="230 0 255">
		<BlockGenusMember>local-var-object-Text</BlockGenusMember>
		<BlockGenusMember>text[@string]</BlockGenusMember>
		<BlockGenusMember>getText[]</BlockGenusMember>
	</BlockDrawer>

	<BlockDrawer name="SoundTurtle" type="factory" button-color="230 0 255">
		<BlockGenusMember>local-var-object-Sound</BlockGenusMember>
		<BlockGenusMember>file[@string]</BlockGenusMember>
		<BlockGenusMember>play[]</BlockGenusMember>
		<BlockGenusMember>loop[]</BlockGenusMember>
		<BlockGenusMember>stop[]</BlockGenusMember>
		<BlockGenusMember>isPlaying[]</BlockGenusMember>
		<BlockGenusMember>getVolume[]</BlockGenusMember>
		<BlockGenusMember>setVolume[@int]</BlockGenusMember>
		<BlockGenusMember>loadOnMemory[]</BlockGenusMember>
	</BlockDrawer>

	<BlockDrawer name="CardTurtle" type="factory" button-color="255 255 100">
		<BlockGenusMember>local-var-object-Card</BlockGenusMember>
		<BlockGenusMember>getText[]</BlockGenusMember>
		<BlockGenusMember>getNumber[]</BlockGenusMember>
	</BlockDrawer>

	<BlockDrawer name="ListTurtle" type="factory" button-color="255 255 100">
		<BlockGenusMember>local-var-object-ListTurtle&lt;Turtle&gt;</BlockGenusMember>
		<BlockGenusMember>local-var-object-ListTurtle&lt;CardTurtle&gt;</BlockGenusMember>
		<BlockGenusMember>local-var-object-ListTurtle&lt;ImageTurtle&gt;</BlockGenusMember>
		<BlockGenusMember>local-var-object-ListTurtle&lt;TextTurtle&gt;</BlockGenusMember>
		<BlockGenusMember>local-var-object-ListTurtle&lt;SoundTurtle&gt;</BlockGenusMember>
		<BlockGenusMember>local-var-object-ListTurtle&lt;ButtonTurtle&gt;</BlockGenusMember>
		<BlockGenusMember>local-var-object-ListTurtle&lt;InputTurtle&gt;</BlockGenusMember>
		<BlockGenusMember>new-object-ListTurtle&lt;Turtle&gt;[]</BlockGenusMember>
		<BlockGenusMember>new-object-ListTurtle&lt;ImageTurtle&gt;[]</BlockGenusMember>
		<BlockGenusMember>new-object-ListTurtle&lt;CardTurtle&gt;[]</BlockGenusMember>
		<BlockGenusMember>new-object-ListTurtle&lt;TextTurtle&gt;[]</BlockGenusMember>
		<BlockGenusMember>new-object-ListTurtle&lt;SoundTurtle&gt;[]</BlockGenusMember>
		<BlockGenusMember>new-object-ListTurtle&lt;ButtonTurtle&gt;[]</BlockGenusMember>
		<BlockGenusMember>new-object-ListTurtle&lt;InputTurtle&gt;[]</BlockGenusMember>
		<BlockGenusMember>new-object-ListTurtle&lt;Turtle&gt;[@boolean@string]</BlockGenusMember>
		<BlockGenusMember>new-object-ListTurtle&lt;ImageTurtle&gt;[@boolean@string]</BlockGenusMember>
		<BlockGenusMember>new-object-ListTurtle&lt;CardTurtle&gt;[@boolean@string]</BlockGenusMember>
		<BlockGenusMember>new-object-ListTurtle&lt;TextTurtle&gt;[@boolean@string]</BlockGenusMember>
		<BlockGenusMember>new-object-ListTurtle&lt;SoundTurtle&gt;[@boolean@string]</BlockGenusMember>
		<BlockGenusMember>new-object-ListTurtle&lt;ButtonTurtle&gt;[@boolean@string]</BlockGenusMember>
		<BlockGenusMember>new-object-ListTurtle&lt;InputTurtle&gt;[@boolean@string]</BlockGenusMember>
		<BlockGenusMember>get[@int]</BlockGenusMember>
		<BlockGenusMember>getSize[]</BlockGenusMember>
		<BlockGenusMember>add[@int]</BlockGenusMember>
		<BlockGenusMember>addFirst[@object]</BlockGenusMember>
		<BlockGenusMember>addLast[@object]</BlockGenusMember>
		<BlockGenusMember>addAll[@object]</BlockGenusMember>
		<BlockGenusMember>moveAllTo[@object]</BlockGenusMember>
		<BlockGenusMember>removeFirst[]</BlockGenusMember>
		<BlockGenusMember>removeLast[]</BlockGenusMember>
		<BlockGenusMember>removeAll[]</BlockGenusMember>
		<BlockGenusMember>getCursor[]</BlockGenusMember>
		<BlockGenusMember>setCursor[@int]</BlockGenusMember>
		<BlockGenusMember>moveCursorToNext[]</BlockGenusMember>
		<BlockGenusMember>moveCursorToPrevious[]</BlockGenusMember>
		<BlockGenusMember>getObjectAtCursor[]</BlockGenusMember>
		<BlockGenusMember>addToBeforeCursor[@object]</BlockGenusMember>
		<BlockGenusMember>addToAfterCursor[@object]</BlockGenusMember>
		<BlockGenusMember>removeAtCursor[]</BlockGenusMember>
		<BlockGenusMember>shuffle[]</BlockGenusMember>
		<BlockGenusMember>setBgColor[@object]</BlockGenusMember>
	</BlockDrawer>

	<BlockDrawer name="ButtonTurtle" type="factory" button-color="255 255 100">
		<BlockGenusMember>local-var-object-Button</BlockGenusMember>
		<BlockGenusMember>isClicked[]</BlockGenusMember>
		<BlockGenusMember>fontsize[@int]</BlockGenusMember>
	</BlockDrawer>


	<BlockDrawer name="InputTurtle" type="factory" button-color="255 255  100">
		<BlockGenusMember>local-var-object-Input</BlockGenusMember>
		<BlockGenusMember>fontsize[@int]</BlockGenusMember>
		<BlockGenusMember>clearText[]</BlockGenusMember>
		<BlockGenusMember>setActive[@boolean]</BlockGenusMember>
		<BlockGenusMember>isActive[]</BlockGenusMember>
		<BlockGenusMember>toJapaneseMode[]</BlockGenusMember>
		<BlockGenusMember>toEnglishMode[]</BlockGenusMember>
		<BlockGenusMember>getText[]</BlockGenusMember>
	</BlockDrawer>


</BlockDrawerSet>